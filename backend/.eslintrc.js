module.exports = {
	root: true,
	env: {
		node: true,
		es6: true,
	},
	extends: [
		'eslint:recommended',
		'plugin:node/recommended',
	],
	rules: {
		'no-debugger': 'warn',
		'no-await-in-loop': 'warn',
		'no-import-assign': 'error',
		'array-callback-return': 'error',
		'block-scoped-var': 'error',
		complexity: ['warn', 10],
		curly: ['error', 'all'],
		'default-param-last': 'error',
		'dot-location': ['error', 'property'],
		'dot-notation': ['error', { allowPattern: '^[a-z]+(_[a-z]+)+$' }],
		eqeqeq: 'error',
		'no-extend-native': 'error',
		'no-floating-decimal': 'error',
		'no-implicit-coercion': ['error', { allow: [ '!!' ] }],
		'no-magic-numbers': ['error', { ignore: [0, 1] }],
		'no-param-reassign': 'error',
		'no-throw-literal': 'error',
		'prefer-promise-reject-errors': 'error',
		'require-await': 'error',
		'no-shadow': 'error',
		'no-use-before-define': ['error', { functions: false }],
		'no-unused-vars': ['warn', { ignoreRestSiblings: true }],
		indent: ['error', 'tab'], // enforce tabs in script and js files
		semi: ['error', 'always'],
		quotes: ['error', 'single', { avoidEscape: true }],
		'eol-last': ['error', 'never'],
		'brace-style': ['error', '1tbs'],
		camelcase: ['error', { properties: 'never' }],
		'max-depth': ['warn', { max: 4 }],
		'max-len': ['warn', 120],
		'max-statements': ['warn', 14, { ignoreTopLevelFunctions: true }],
		'comma-dangle': ['error', 'always-multiline'],
		'comma-spacing': ['error', { before: false, after: true }],
		'comma-style': ['error', 'last'],
		'no-multi-spaces': ['error', { exceptions: { Property: false } }],
		'no-trailing-spaces': 'error',
		'keyword-spacing': 'error',
		'space-in-parens': ['error', 'never'],
		'block-spacing': ['error', 'always'],
		'space-before-blocks': ['error', 'always'],
		'rest-spread-spacing': ['error', 'never'],
		'spaced-comment': ['error', 'always'],
		'lines-between-class-members': ['error', 'always'],
		'no-multiple-empty-lines': ['error', { max: 1, maxBOF: 0, maxEOF: 0 }],
		'padded-blocks': ['error', 'never'],
		'func-style': ['error', 'declaration', { allowArrowFunctions: true }],
		'func-call-spacing': ['error', 'never'],
		'space-before-function-paren': ['error', { named: 'never', anonymous: 'always', asyncArrow: 'always' }],
		'function-paren-newline': ['error', 'consistent'],
		'function-call-argument-newline': ['error', 'consistent'],
		'arrow-parens': ['error', 'as-needed', { requireForBlockBody: true }],
		'arrow-spacing': ['error', { before: true, after: true }],
		'implicit-arrow-linebreak': ['error', 'beside'],
		'newline-per-chained-call': ['error', { ignoreChainWithDepth: 3 }],
		'array-bracket-spacing': ['error', 'never', { singleValue: true }],
		'array-bracket-newline': ['error', 'consistent'],
		'array-element-newline': ['error', 'consistent'],
		'object-curly-spacing': ['error', 'always'],
		'object-curly-newline': ['error', { consistent: true }],
		'object-property-newline': ['error', { allowAllPropertiesOnSameLine: true }],
		'key-spacing': ['error', { beforeColon: false, afterColon: true }],
		'computed-property-spacing': ['error', 'never'],
		'no-whitespace-before-property': 'error',
		'object-shorthand': ['error', 'always'],
		'quote-props': ['error', 'as-needed'],
		'no-var': 'error',
		'prefer-const': 'error',
		'one-var': ['error', 'never'],
		'no-unneeded-ternary': ['error', { defaultAssignment: false }],
		'operator-linebreak': [
			'error',
			'before',
			{
				overrides: {
					'=': 'none', '==': 'none', '===': 'none', '+=': 'none', '-=': 'none', '*=': 'none', '/=': 'none',
				},
			},
		],
		'space-infix-ops': 'error',
		'space-unary-ops': ['error', { words: true, nonwords: false }],
		'no-mixed-operators': 'error',
		'multiline-ternary': ['error', 'always-multiline'],
		'new-parens': ['error', 'always'],
		'consistent-this': ['error', 'that'],

	},
	overrides: [
		{
			files: [
				'*.spec.js',
				'**/testUtils/**/*.js',
				'**/__mocks__/*.js',
			],
			env: {
				jest: true,
			},
			plugins: [ 'jest' ],
			rules: {
				'jest/consistent-test-it': 'error',
				'jest/expect-expect': 'error',
				'jest/no-alias-methods': 'error',
				'jest/no-commented-out-tests': 'error',
				'jest/no-disabled-tests': 'error',
				'jest/no-export': 'error',
				'jest/no-focused-tests': 'error',
				'jest/no-identical-title': 'error',
				'jest/no-jasmine-globals': 'error',
				'jest/no-jest-import': 'error',
				'jest/no-mocks-import': 'error',
				'jest/no-standalone-expect': 'error',
				'jest/no-test-callback': 'error',
				'jest/no-test-prefixes': 'error',
				'jest/no-test-return-statement': 'error',
				'jest/no-truthy-falsy': 'error',
				'jest/no-try-expect': 'error',
				'jest/prefer-called-with': 'error',
				'jest/prefer-strict-equal': 'error',
				'jest/prefer-to-be-null': 'error',
				'jest/prefer-to-be-undefined': 'error',
				'jest/prefer-to-contain': 'error',
				'jest/prefer-to-have-length': 'error',
				'jest/prefer-todo': 'error',
				'jest/require-top-level-describe': 'error',
				'jest/valid-describe': 'error',
				'jest/valid-expect-in-promise': 'error',
				'jest/valid-expect': 'error',
				'jest/valid-title': 'error',
			},
		},
		{
			files: [ '.eslintrc.js' ],
			rules: {
				'no-magic-numbers': 'off',
				'no-dupe-keys': 'off',
			},
		},
		{
			files: [ '*.spec.js' ],
			rules: {
				'max-len': ['warn', 120],
				'max-statements': 'off',
				'no-magic-numbers': 'off',
			},
		},
	],
	parserOptions: {
		parser: 'babel-eslint',
		ecmaVersion: 2020,
		sourceType: 'module',
	},
};